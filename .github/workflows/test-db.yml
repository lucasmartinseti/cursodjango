name: 'Test DB'
on:
  push:
    branches:
      - main

jobs:
  lint-test:
    name: Lint and Test code
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10.9"]
        poetry-version: ["1.3.2"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          poetry install
          pip install --upgrade pip
      - name: Lint code
        run: |
          poetry run flake8 .
      - name: Test code app
        run: |
          cp contrib/env-sample .env
          poetry run pytest --cov=pypro

  test-migrate:
    name: Test migrate.
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10.9"]
        poetry-version: ["1.3.2"]
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_PASSWORD: dev
          POSTGRES_USER: dev
          POSTGRES_DB: dev-app
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Test Migrate
        run: |
          cp contrib/env-sample .env
          poetry install
          pip install --upgrade pip
          poetry run ./manage.py migrate
          poetry run ./manage.py test

